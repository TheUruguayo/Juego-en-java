/*
Obligatorio Final:
    -Ignacio Lanzani  (143289)
    -Alejandro Rossi  (195243)
 */
package interfaz;
import Dominio.Memory;
import java.awt.event.*; 
import java.awt.* ; 
import static java.lang.Integer.parseInt;
  import javax.swing.*;
import java.applet.AudioClip;

public class MemoryI extends javax.swing.JFrame {
       private Memory partida;
       private JButton[][] botones;
       private String[][] matriz;            
       private int count=0;                  //cuenta los clicks
       private String[] texto=new String[2]; //seleccion
       private int[] coordenadas=new int[2]; //guarda las coordenadas
    
    public MemoryI( Memory unaPartida) {
        initComponents();
        this.partida=unaPartida;
        this.btnMusic.setSize(20,29);
        botones = new JButton[3][4];
        matriz=this.partida.matrizPregutnasRespuestas();
        this.jLabelPuntos.setText(""+0);
        this.partida.getTemasElegidosString();
        this.setTitle(this.partida.getTemasElegidosString());
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 4; j++) {
                JButton jButton = new JButton();
                jButton.addActionListener(new ListenerBoton(i, j));
                panelInferior.add(jButton);
                botones[i][j] = jButton;
                this.textoAescribir("<html><p>"+"*************"+"</p></html>", i, j);
                
                
            }
        }
            sonido(true);                
    }

    private MemoryI() {
       initComponents();
    }
    private void textoAescribir(String unTexto,int fila, int columna){
      if (getBotones()[fila][columna].isEnabled())
                getBotones()[fila][columna].setText("<html><p>"+unTexto+"</p></html>");
            
        }
    
    
    private void ayudaParcial(){
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 4; j++) {
                if (this.getPartida().getPreguntaOresputa()[i][j].compareTo("RES")==0){
                   
             this.textoAescribir("<html><font color=orange>"+this.getPartida().getPreguntaOresputa()[i][j]+"</font></html>" , i, j);  
             } else this.textoAescribir("<html><font color=blue>"+this.getPartida().getPreguntaOresputa()[i][j]+"</font></html>" , i, j);
            }
               
            }
        
    }
    private void ayudaTotal(){
        
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 4; j++) {
             if (this.getPartida().getPreguntaOresputa()[i][j].compareTo("RES")==0){
                   
             this.textoAescribir("<html><font color=orange>"+this.getMatriz()[i][j]+"</font></html>" , i, j);  
             } else this.textoAescribir("<html><font color=blue>"+this.getMatriz()[i][j]+"</font></html>" , i, j);
            }
        }
    }
    private void reset(){
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 4; j++) {
             this.textoAescribir( "<html><p><font color=black>"+"*************"+"</p></html>", i, j);  
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelInferior = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        btnReset = new javax.swing.JButton();
        btnAyudaP = new javax.swing.JButton();
        btnAyudaT = new javax.swing.JButton();
        lblPuntos = new javax.swing.JLabel();
        jLabelPuntos = new javax.swing.JLabel();
        btnMusic = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });
        getContentPane().setLayout(null);

        panelInferior.setLayout(new java.awt.GridLayout(3, 4));
        getContentPane().add(panelInferior);
        panelInferior.setBounds(0, 110, 831, 310);

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });
        jPanel1.add(btnReset);

        btnAyudaP.setText("Ayuda Parcial");
        btnAyudaP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAyudaPActionPerformed(evt);
            }
        });
        jPanel1.add(btnAyudaP);

        btnAyudaT.setText("Ayuda");
        btnAyudaT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAyudaTActionPerformed(evt);
            }
        });
        jPanel1.add(btnAyudaT);

        lblPuntos.setText("Puntos");
        jPanel1.add(lblPuntos);

        jLabelPuntos.setText("0");
        jPanel1.add(jLabelPuntos);

        btnMusic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaz/volumen.png"))); // NOI18N
        btnMusic.setText("ON");
        btnMusic.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnMusicMouseClicked(evt);
            }
        });
        btnMusic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMusicActionPerformed(evt);
            }
        });
        jPanel1.add(btnMusic);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(130, 10, 560, 90);

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        getContentPane().add(btnSalir);
        btnSalir.setBounds(740, 10, 75, 29);

        setSize(new java.awt.Dimension(847, 467));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAyudaTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAyudaTActionPerformed
    this.ayudaTotal();   
    this.setCount(0);
// TODO add your handling code here:
    }//GEN-LAST:event_btnAyudaTActionPerformed

    private void btnAyudaPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAyudaPActionPerformed
 this.ayudaParcial();
this.setCount(0);
    }//GEN-LAST:event_btnAyudaPActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
 this.reset();
 this.setCount(0);
    }//GEN-LAST:event_btnResetActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
     Menu m1=new Menu("Sistema.ser");
    m1.setVisible(true);
    sonido(false);
    }//GEN-LAST:event_formWindowClosed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
      this.dispose();
        
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnMusicMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMusicMouseClicked
        
    }//GEN-LAST:event_btnMusicMouseClicked

    private void btnMusicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMusicActionPerformed
     //Para apagar y prender la musica 
     if(this.btnMusic.getText().equals("ON")){
         sonido(false);
         this.btnMusic.setText("OFF");
     }else{
         sonido(true);
         this.btnMusic.setText("ON");
     }
    }//GEN-LAST:event_btnMusicActionPerformed
    private void sonido(boolean flag){
        AudioClip sonido;
        
        sonido=java.applet.Applet.newAudioClip(getClass().getResource("/interfaz/musica.wav"));
        if(flag){
            sonido.play();      
        }else{      
            sonido.stop();
        
        }
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Memory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Memory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Memory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Memory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MemoryI().setVisible(true);
            }
        });
    }
private class ListenerBoton implements ActionListener {
    private int x;
    private int y;
    public ListenerBoton(int i, int j) {
    // en el constructor se almacena la fila y columna que se presionó
        x = i;
        y = j;
}   
    public void actionPerformed(ActionEvent e) {
// cuando se presiona un botón, se ejecutará este método
     clickBoton(x, y);
     
    
}
}
private void clickBoton(int fila, int columna) {
// Método a completar!.
// En fila y columna se reciben las coordenas donde presionó el usuario, relativas al comienzo de la grilla
// fila 0 y columna 0 corresponden a la posición de arriba a la izquierda.
// Debe indicarse cómo responder al click de ese botón.

this.getBotones()[fila][columna].setForeground(Color.GREEN);

if (controlCasillas(fila,columna)){//no clique dos veces la misma
      
    int aux=parseInt(this.getjLabelPuntos().getText());
    this.getBotones()[fila][columna].setText(""+this.getMatriz()[fila][columna]);
    
    this.getTexto()[this.getCount()]=this.getMatriz()[fila][columna];
    this.setCount(this.getCount()+1);
        
    if(this.getCount()==2){
        this.getBotones()[this.getCoordenadas()[0]][this.getCoordenadas()[1]].setForeground(Color.black);
        this.getBotones()[fila][columna].setForeground(Color.black);
        this.getjLabelPuntos().setText(""+this.getPartida().puntos(this.getTexto())); //le pasamos a puntos el texto
        this.setCount(0);
            
        if(aux>=parseInt(this.getjLabelPuntos().getText()))  { //si bajo el puntaje tapo los casilleros
           
            this.getBotones()[fila][columna].setText("<html><p>"+"*************"+"</p></html>");
            this.getBotones()[this.getCoordenadas()[0]][this.getCoordenadas()[1]].setText("<html><p>"+"*************"+"</p></html>");   
          } else {
            this.getBotones()[fila][columna].setEnabled(false);
            this.getBotones()[this.getCoordenadas()[0]][this.getCoordenadas()[1]].setEnabled(false);
        
        }
        
        }
    
    
    }//endiff
   


      
}
public boolean controlCasillas(int fila, int columna){
         boolean bandera=false;
         int aux=0;
        //no se puede repetir casillero
        if(this.getCount()==0){
            this.getCoordenadas()[0]=fila;
            this.getCoordenadas()[1]=columna;
        }else {
                bandera=(this.getCoordenadas()[0]==fila&&this.getCoordenadas()[1]==columna);
        }
        return !bandera;
}
       
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAyudaP;
    private javax.swing.JButton btnAyudaT;
    private javax.swing.JButton btnMusic;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabelPuntos;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblPuntos;
    private javax.swing.JPanel panelInferior;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the count
     */
    public int getCount() {
        return count;
    }

    /**
     * @param count the count to set
     */
    public void setCount(int count) {
        this.count = count;
    }

    /**
     * @return the partida
     */
    public Memory getPartida() {
        return partida;
    }

    /**
     * @param partida the partida to set
     */
    public void setPartida(Memory partida) {
        this.partida = partida;
    }

    /**
     * @return the botones
     */
    public JButton[][] getBotones() {
        return botones;
    }

    /**
     * @param botones the botones to set
     */
    public void setBotones(JButton[][] botones) {
        this.botones = botones;
    }

    /**
     * @return the matriz
     */
    public String[][] getMatriz() {
        return matriz;
    }

    /**
     * @param matriz the matriz to set
     */
    public void setMatriz(String[][] matriz) {
        this.matriz = matriz;
    }

    /**
     * @return the texto
     */
    public String[] getTexto() {
        return texto;
    }

    /**
     * @param texto the texto to set
     */
    public void setTexto(String[] texto) {
        this.texto = texto;
    }

    /**
     * @return the coordenadas
     */
    public int[] getCoordenadas() {
        return coordenadas;
    }

    /**
     * @param coordenadas the coordenadas to set
     */
    public void setCoordenadas(int[] coordenadas) {
        this.coordenadas = coordenadas;
    }

    /**
     * @return the jButton1
     */
    public javax.swing.JButton getjButton1() {
        return btnAyudaT;
    }

    /**
     * @param jButton1 the jButton1 to set
     */
    public void setjButton1(javax.swing.JButton jButton1) {
        this.btnAyudaT = jButton1;
    }

    /**
     * @return the jButton2
     */
    public javax.swing.JButton getjButton2() {
        return btnAyudaP;
    }

    /**
     * @param jButton2 the jButton2 to set
     */
    public void setjButton2(javax.swing.JButton jButton2) {
        this.btnAyudaP = jButton2;
    }

    /**
     * @return the jButton3
     */
    public javax.swing.JButton getjButton3() {
        return btnReset;
    }

    /**
     * @param jButton3 the jButton3 to set
     */
    public void setjButton3(javax.swing.JButton jButton3) {
        this.btnReset = jButton3;
    }

    /**
     * @return the jLabel1
     */
    public javax.swing.JLabel getjLabel1() {
        return lblPuntos;
    }

    /**
     * @param jLabel1 the jLabel1 to set
     */
    public void setjLabel1(javax.swing.JLabel jLabel1) {
        this.lblPuntos = jLabel1;
    }

    /**
     * @return the jLabelPuntos
     */
    public javax.swing.JLabel getjLabelPuntos() {
        return jLabelPuntos;
    }

    /**
     * @param jLabelPuntos the jLabelPuntos to set
     */
    public void setjLabelPuntos(javax.swing.JLabel jLabelPuntos) {
        this.jLabelPuntos = jLabelPuntos;
    }

    /**
     * @return the jPanel1
     */
    public javax.swing.JPanel getjPanel1() {
        return jPanel1;
    }

    /**
     * @param jPanel1 the jPanel1 to set
     */
    public void setjPanel1(javax.swing.JPanel jPanel1) {
        this.jPanel1 = jPanel1;
    }

    /**
     * @return the panelInferior
     */
    public javax.swing.JPanel getPanelInferior() {
        return panelInferior;
    }

    /**
     * @param panelInferior the panelInferior to set
     */
    public void setPanelInferior(javax.swing.JPanel panelInferior) {
        this.panelInferior = panelInferior;
    }
}
